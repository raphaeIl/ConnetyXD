// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OZTotalWarRanking.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Oz {

  /// <summary>Holder for reflection information generated from OZTotalWarRanking.proto</summary>
  public static partial class OZTotalWarRankingReflection {

    #region Descriptor
    /// <summary>File descriptor for OZTotalWarRanking.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OZTotalWarRankingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdPWlRvdGFsV2FyUmFua2luZy5wcm90bxoQT1pSYW5rSW5mby5wcm90bxoV",
            "T1pUb3RhbFdhclBhcnR5LnByb3RvGhpUb3RhbFdhclJhbmtUaWVyVHlwZS5w",
            "cm90bxobVG90YWxXYXJEaWZmaWN1bHRUeXBlLnByb3RvIocDChFPWlRvdGFs",
            "V2FyUmFua2luZxIeCglyYW5rX2luZm8YASABKAsyCy5PWlJhbmtJbmZvEhIK",
            "CnNlYXNvbl9udW0YAiABKAUSEQoJYm9keWd1YXJkGAMgASgJEhAKCG5pY2tu",
            "YW1lGAQgASgJEhAKCHRpdGxlX2lkGAUgASgJEhEKCXJlYWRlcl9sdhgGIAEo",
            "BRInCg1lbnRyeV9wYXJ0aWVzGAcgAygLMhAuT1pUb3RhbFdhclBhcnR5EigK",
            "CXRpZXJfdHlwZRgJIAEoDjIVLlRvdGFsV2FyUmFua1RpZXJUeXBlEikKCWRp",
            "ZmZfdHlwZRgKIAEoDjIWLlRvdGFsV2FyRGlmZmljdWx0VHlwZRIYChBjdW11",
            "bGF0aXZlX3BvaW50GAsgASgDEhgKEHJhbmtpbmdfcmV3YXJkZWQYDCABKAgS",
            "JQoYbGFzdF9jdW11bGF0aXZlX3Jld2FyZGVkGA0gASgJSACIAQFCGwoZX2xh",
            "c3RfY3VtdWxhdGl2ZV9yZXdhcmRlZEIFqgICT3piBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Oz.OZRankInfoReflection.Descriptor, global::Oz.OZTotalWarPartyReflection.Descriptor, global::Oz.TotalWarRankTierTypeReflection.Descriptor, global::Oz.TotalWarDifficultTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Oz.OZTotalWarRanking), global::Oz.OZTotalWarRanking.Parser, new[]{ "RankInfo", "SeasonNum", "Bodyguard", "Nickname", "TitleId", "ReaderLv", "EntryParties", "TierType", "DiffType", "CumulativePoint", "RankingRewarded", "LastCumulativeRewarded" }, new[]{ "LastCumulativeRewarded" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OZTotalWarRanking : pb::IMessage<OZTotalWarRanking>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OZTotalWarRanking> _parser = new pb::MessageParser<OZTotalWarRanking>(() => new OZTotalWarRanking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OZTotalWarRanking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Oz.OZTotalWarRankingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZTotalWarRanking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZTotalWarRanking(OZTotalWarRanking other) : this() {
      rankInfo_ = other.rankInfo_ != null ? other.rankInfo_.Clone() : null;
      seasonNum_ = other.seasonNum_;
      bodyguard_ = other.bodyguard_;
      nickname_ = other.nickname_;
      titleId_ = other.titleId_;
      readerLv_ = other.readerLv_;
      entryParties_ = other.entryParties_.Clone();
      tierType_ = other.tierType_;
      diffType_ = other.diffType_;
      cumulativePoint_ = other.cumulativePoint_;
      rankingRewarded_ = other.rankingRewarded_;
      lastCumulativeRewarded_ = other.lastCumulativeRewarded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZTotalWarRanking Clone() {
      return new OZTotalWarRanking(this);
    }

    /// <summary>Field number for the "rank_info" field.</summary>
    public const int RankInfoFieldNumber = 1;
    private global::Oz.OZRankInfo rankInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Oz.OZRankInfo RankInfo {
      get { return rankInfo_; }
      set {
        rankInfo_ = value;
      }
    }

    /// <summary>Field number for the "season_num" field.</summary>
    public const int SeasonNumFieldNumber = 2;
    private int seasonNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeasonNum {
      get { return seasonNum_; }
      set {
        seasonNum_ = value;
      }
    }

    /// <summary>Field number for the "bodyguard" field.</summary>
    public const int BodyguardFieldNumber = 3;
    private string bodyguard_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bodyguard {
      get { return bodyguard_; }
      set {
        bodyguard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 4;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 5;
    private string titleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleId {
      get { return titleId_; }
      set {
        titleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reader_lv" field.</summary>
    public const int ReaderLvFieldNumber = 6;
    private int readerLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReaderLv {
      get { return readerLv_; }
      set {
        readerLv_ = value;
      }
    }

    /// <summary>Field number for the "entry_parties" field.</summary>
    public const int EntryPartiesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Oz.OZTotalWarParty> _repeated_entryParties_codec
        = pb::FieldCodec.ForMessage(58, global::Oz.OZTotalWarParty.Parser);
    private readonly pbc::RepeatedField<global::Oz.OZTotalWarParty> entryParties_ = new pbc::RepeatedField<global::Oz.OZTotalWarParty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Oz.OZTotalWarParty> EntryParties {
      get { return entryParties_; }
    }

    /// <summary>Field number for the "tier_type" field.</summary>
    public const int TierTypeFieldNumber = 9;
    private global::Oz.TotalWarRankTierType tierType_ = global::Oz.TotalWarRankTierType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Oz.TotalWarRankTierType TierType {
      get { return tierType_; }
      set {
        tierType_ = value;
      }
    }

    /// <summary>Field number for the "diff_type" field.</summary>
    public const int DiffTypeFieldNumber = 10;
    private global::Oz.TotalWarDifficultType diffType_ = global::Oz.TotalWarDifficultType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Oz.TotalWarDifficultType DiffType {
      get { return diffType_; }
      set {
        diffType_ = value;
      }
    }

    /// <summary>Field number for the "cumulative_point" field.</summary>
    public const int CumulativePointFieldNumber = 11;
    private long cumulativePoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CumulativePoint {
      get { return cumulativePoint_; }
      set {
        cumulativePoint_ = value;
      }
    }

    /// <summary>Field number for the "ranking_rewarded" field.</summary>
    public const int RankingRewardedFieldNumber = 12;
    private bool rankingRewarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RankingRewarded {
      get { return rankingRewarded_; }
      set {
        rankingRewarded_ = value;
      }
    }

    /// <summary>Field number for the "last_cumulative_rewarded" field.</summary>
    public const int LastCumulativeRewardedFieldNumber = 13;
    private readonly static string LastCumulativeRewardedDefaultValue = "";

    private string lastCumulativeRewarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastCumulativeRewarded {
      get { return lastCumulativeRewarded_ ?? LastCumulativeRewardedDefaultValue; }
      set {
        lastCumulativeRewarded_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_cumulative_rewarded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastCumulativeRewarded {
      get { return lastCumulativeRewarded_ != null; }
    }
    /// <summary>Clears the value of the "last_cumulative_rewarded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastCumulativeRewarded() {
      lastCumulativeRewarded_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OZTotalWarRanking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OZTotalWarRanking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RankInfo, other.RankInfo)) return false;
      if (SeasonNum != other.SeasonNum) return false;
      if (Bodyguard != other.Bodyguard) return false;
      if (Nickname != other.Nickname) return false;
      if (TitleId != other.TitleId) return false;
      if (ReaderLv != other.ReaderLv) return false;
      if(!entryParties_.Equals(other.entryParties_)) return false;
      if (TierType != other.TierType) return false;
      if (DiffType != other.DiffType) return false;
      if (CumulativePoint != other.CumulativePoint) return false;
      if (RankingRewarded != other.RankingRewarded) return false;
      if (LastCumulativeRewarded != other.LastCumulativeRewarded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rankInfo_ != null) hash ^= RankInfo.GetHashCode();
      if (SeasonNum != 0) hash ^= SeasonNum.GetHashCode();
      if (Bodyguard.Length != 0) hash ^= Bodyguard.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (TitleId.Length != 0) hash ^= TitleId.GetHashCode();
      if (ReaderLv != 0) hash ^= ReaderLv.GetHashCode();
      hash ^= entryParties_.GetHashCode();
      if (TierType != global::Oz.TotalWarRankTierType.None) hash ^= TierType.GetHashCode();
      if (DiffType != global::Oz.TotalWarDifficultType.None) hash ^= DiffType.GetHashCode();
      if (CumulativePoint != 0L) hash ^= CumulativePoint.GetHashCode();
      if (RankingRewarded != false) hash ^= RankingRewarded.GetHashCode();
      if (HasLastCumulativeRewarded) hash ^= LastCumulativeRewarded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rankInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RankInfo);
      }
      if (SeasonNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeasonNum);
      }
      if (Bodyguard.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Bodyguard);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Nickname);
      }
      if (TitleId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TitleId);
      }
      if (ReaderLv != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReaderLv);
      }
      entryParties_.WriteTo(output, _repeated_entryParties_codec);
      if (TierType != global::Oz.TotalWarRankTierType.None) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TierType);
      }
      if (DiffType != global::Oz.TotalWarDifficultType.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DiffType);
      }
      if (CumulativePoint != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CumulativePoint);
      }
      if (RankingRewarded != false) {
        output.WriteRawTag(96);
        output.WriteBool(RankingRewarded);
      }
      if (HasLastCumulativeRewarded) {
        output.WriteRawTag(106);
        output.WriteString(LastCumulativeRewarded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rankInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RankInfo);
      }
      if (SeasonNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeasonNum);
      }
      if (Bodyguard.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Bodyguard);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Nickname);
      }
      if (TitleId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TitleId);
      }
      if (ReaderLv != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReaderLv);
      }
      entryParties_.WriteTo(ref output, _repeated_entryParties_codec);
      if (TierType != global::Oz.TotalWarRankTierType.None) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TierType);
      }
      if (DiffType != global::Oz.TotalWarDifficultType.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DiffType);
      }
      if (CumulativePoint != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CumulativePoint);
      }
      if (RankingRewarded != false) {
        output.WriteRawTag(96);
        output.WriteBool(RankingRewarded);
      }
      if (HasLastCumulativeRewarded) {
        output.WriteRawTag(106);
        output.WriteString(LastCumulativeRewarded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rankInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RankInfo);
      }
      if (SeasonNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeasonNum);
      }
      if (Bodyguard.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bodyguard);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (TitleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleId);
      }
      if (ReaderLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReaderLv);
      }
      size += entryParties_.CalculateSize(_repeated_entryParties_codec);
      if (TierType != global::Oz.TotalWarRankTierType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TierType);
      }
      if (DiffType != global::Oz.TotalWarDifficultType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiffType);
      }
      if (CumulativePoint != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CumulativePoint);
      }
      if (RankingRewarded != false) {
        size += 1 + 1;
      }
      if (HasLastCumulativeRewarded) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastCumulativeRewarded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OZTotalWarRanking other) {
      if (other == null) {
        return;
      }
      if (other.rankInfo_ != null) {
        if (rankInfo_ == null) {
          RankInfo = new global::Oz.OZRankInfo();
        }
        RankInfo.MergeFrom(other.RankInfo);
      }
      if (other.SeasonNum != 0) {
        SeasonNum = other.SeasonNum;
      }
      if (other.Bodyguard.Length != 0) {
        Bodyguard = other.Bodyguard;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.TitleId.Length != 0) {
        TitleId = other.TitleId;
      }
      if (other.ReaderLv != 0) {
        ReaderLv = other.ReaderLv;
      }
      entryParties_.Add(other.entryParties_);
      if (other.TierType != global::Oz.TotalWarRankTierType.None) {
        TierType = other.TierType;
      }
      if (other.DiffType != global::Oz.TotalWarDifficultType.None) {
        DiffType = other.DiffType;
      }
      if (other.CumulativePoint != 0L) {
        CumulativePoint = other.CumulativePoint;
      }
      if (other.RankingRewarded != false) {
        RankingRewarded = other.RankingRewarded;
      }
      if (other.HasLastCumulativeRewarded) {
        LastCumulativeRewarded = other.LastCumulativeRewarded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rankInfo_ == null) {
              RankInfo = new global::Oz.OZRankInfo();
            }
            input.ReadMessage(RankInfo);
            break;
          }
          case 16: {
            SeasonNum = input.ReadInt32();
            break;
          }
          case 26: {
            Bodyguard = input.ReadString();
            break;
          }
          case 34: {
            Nickname = input.ReadString();
            break;
          }
          case 42: {
            TitleId = input.ReadString();
            break;
          }
          case 48: {
            ReaderLv = input.ReadInt32();
            break;
          }
          case 58: {
            entryParties_.AddEntriesFrom(input, _repeated_entryParties_codec);
            break;
          }
          case 72: {
            TierType = (global::Oz.TotalWarRankTierType) input.ReadEnum();
            break;
          }
          case 80: {
            DiffType = (global::Oz.TotalWarDifficultType) input.ReadEnum();
            break;
          }
          case 88: {
            CumulativePoint = input.ReadInt64();
            break;
          }
          case 96: {
            RankingRewarded = input.ReadBool();
            break;
          }
          case 106: {
            LastCumulativeRewarded = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rankInfo_ == null) {
              RankInfo = new global::Oz.OZRankInfo();
            }
            input.ReadMessage(RankInfo);
            break;
          }
          case 16: {
            SeasonNum = input.ReadInt32();
            break;
          }
          case 26: {
            Bodyguard = input.ReadString();
            break;
          }
          case 34: {
            Nickname = input.ReadString();
            break;
          }
          case 42: {
            TitleId = input.ReadString();
            break;
          }
          case 48: {
            ReaderLv = input.ReadInt32();
            break;
          }
          case 58: {
            entryParties_.AddEntriesFrom(ref input, _repeated_entryParties_codec);
            break;
          }
          case 72: {
            TierType = (global::Oz.TotalWarRankTierType) input.ReadEnum();
            break;
          }
          case 80: {
            DiffType = (global::Oz.TotalWarDifficultType) input.ReadEnum();
            break;
          }
          case 88: {
            CumulativePoint = input.ReadInt64();
            break;
          }
          case 96: {
            RankingRewarded = input.ReadBool();
            break;
          }
          case 106: {
            LastCumulativeRewarded = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
