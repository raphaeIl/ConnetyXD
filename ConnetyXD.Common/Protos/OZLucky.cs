// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OZLucky.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Oz {

  /// <summary>Holder for reflection information generated from OZLucky.proto</summary>
  public static partial class OZLuckyReflection {

    #region Descriptor
    /// <summary>File descriptor for OZLucky.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OZLuckyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1PWkx1Y2t5LnByb3RvGg9MdWNreVR5cGUucHJvdG8ifgoHT1pMdWNreRIe",
            "CgpsdWNreV90eXBlGAEgASgOMgouTHVja3lUeXBlEhQKDG1lc3NhZ2VfZGVz",
            "YxgCIAEoCRIaChJjb25uZWN0aW9uX2NoYXJfaWQYAyABKAkSEgoKcmVzZXRf",
            "dGltZRgEIAEoAxINCgVjb2xvchgFIAEoBUIFqgICT3piBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Oz.LuckyTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Oz.OZLucky), global::Oz.OZLucky.Parser, new[]{ "LuckyType", "MessageDesc", "ConnectionCharId", "ResetTime", "Color" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OZLucky : pb::IMessage<OZLucky>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OZLucky> _parser = new pb::MessageParser<OZLucky>(() => new OZLucky());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OZLucky> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Oz.OZLuckyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZLucky() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZLucky(OZLucky other) : this() {
      luckyType_ = other.luckyType_;
      messageDesc_ = other.messageDesc_;
      connectionCharId_ = other.connectionCharId_;
      resetTime_ = other.resetTime_;
      color_ = other.color_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OZLucky Clone() {
      return new OZLucky(this);
    }

    /// <summary>Field number for the "lucky_type" field.</summary>
    public const int LuckyTypeFieldNumber = 1;
    private global::Oz.LuckyType luckyType_ = global::Oz.LuckyType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Oz.LuckyType LuckyType {
      get { return luckyType_; }
      set {
        luckyType_ = value;
      }
    }

    /// <summary>Field number for the "message_desc" field.</summary>
    public const int MessageDescFieldNumber = 2;
    private string messageDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MessageDesc {
      get { return messageDesc_; }
      set {
        messageDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_char_id" field.</summary>
    public const int ConnectionCharIdFieldNumber = 3;
    private string connectionCharId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectionCharId {
      get { return connectionCharId_; }
      set {
        connectionCharId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reset_time" field.</summary>
    public const int ResetTimeFieldNumber = 4;
    private long resetTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ResetTime {
      get { return resetTime_; }
      set {
        resetTime_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private int color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OZLucky);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OZLucky other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LuckyType != other.LuckyType) return false;
      if (MessageDesc != other.MessageDesc) return false;
      if (ConnectionCharId != other.ConnectionCharId) return false;
      if (ResetTime != other.ResetTime) return false;
      if (Color != other.Color) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LuckyType != global::Oz.LuckyType.None) hash ^= LuckyType.GetHashCode();
      if (MessageDesc.Length != 0) hash ^= MessageDesc.GetHashCode();
      if (ConnectionCharId.Length != 0) hash ^= ConnectionCharId.GetHashCode();
      if (ResetTime != 0L) hash ^= ResetTime.GetHashCode();
      if (Color != 0) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LuckyType != global::Oz.LuckyType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LuckyType);
      }
      if (MessageDesc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MessageDesc);
      }
      if (ConnectionCharId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConnectionCharId);
      }
      if (ResetTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ResetTime);
      }
      if (Color != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LuckyType != global::Oz.LuckyType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LuckyType);
      }
      if (MessageDesc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MessageDesc);
      }
      if (ConnectionCharId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConnectionCharId);
      }
      if (ResetTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ResetTime);
      }
      if (Color != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LuckyType != global::Oz.LuckyType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LuckyType);
      }
      if (MessageDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageDesc);
      }
      if (ConnectionCharId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionCharId);
      }
      if (ResetTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ResetTime);
      }
      if (Color != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OZLucky other) {
      if (other == null) {
        return;
      }
      if (other.LuckyType != global::Oz.LuckyType.None) {
        LuckyType = other.LuckyType;
      }
      if (other.MessageDesc.Length != 0) {
        MessageDesc = other.MessageDesc;
      }
      if (other.ConnectionCharId.Length != 0) {
        ConnectionCharId = other.ConnectionCharId;
      }
      if (other.ResetTime != 0L) {
        ResetTime = other.ResetTime;
      }
      if (other.Color != 0) {
        Color = other.Color;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LuckyType = (global::Oz.LuckyType) input.ReadEnum();
            break;
          }
          case 18: {
            MessageDesc = input.ReadString();
            break;
          }
          case 26: {
            ConnectionCharId = input.ReadString();
            break;
          }
          case 32: {
            ResetTime = input.ReadInt64();
            break;
          }
          case 40: {
            Color = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LuckyType = (global::Oz.LuckyType) input.ReadEnum();
            break;
          }
          case 18: {
            MessageDesc = input.ReadString();
            break;
          }
          case 26: {
            ConnectionCharId = input.ReadString();
            break;
          }
          case 32: {
            ResetTime = input.ReadInt64();
            break;
          }
          case 40: {
            Color = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
